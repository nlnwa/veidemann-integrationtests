<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.nlnwa</groupId>
    <artifactId>veidemann-integrationtests</artifactId>
    <version>0</version>
    <packaging>jar</packaging>

    <organization>
        <name>National Library of Norway</name>
        <url>http://nb.no</url>
    </organization>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
        <repository>
            <id>oss.sonatype.org</id>
            <name>OSS Sonatype</name>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>


        <org.jwat.version>1.1.1</org.jwat.version>

        <veidemann.commons.version>0.4.1</veidemann.commons.version>
        <veidemann.rethinkdbadapter.version>0.4.5</veidemann.rethinkdbadapter.version>

        <!-- Versions of external docker containers used in integration tests -->
        <browserless.chrome.version>1.18.1-puppeteer-1.20.0</browserless.chrome.version>
        <rethinkdb.version>2.3.6</rethinkdb.version>
        <veidemann.harvester.version>0.5.1</veidemann.harvester.version>
        <veidemann.cache.version>0.2.2</veidemann.cache.version>
        <veidemann.dns.resolver.version>0.2.6</veidemann.dns.resolver.version>
        <veidemann.contentwriter.version>0.2.10</veidemann.contentwriter.version>
        <veidemann.robotsevaluator.version>0.3.8</veidemann.robotsevaluator.version>
        <veidemann.frontier.version>0.4.5</veidemann.frontier.version>
        <veidemann.controller.version>0.5.3</veidemann.controller.version>
        <veidemann.recorderproxy.version>0.2.2</veidemann.recorderproxy.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.github.nlnwa</groupId>
            <artifactId>veidemann-commons</artifactId>
            <version>${veidemann.commons.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.nlnwa</groupId>
            <artifactId>veidemann-rethinkdbadapter</artifactId>
            <version>${veidemann.rethinkdbadapter.version}</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.3.1</version>
        </dependency>

        <!-- ARC/WARC libraries -->
        <dependency>
            <groupId>org.jwat</groupId>
            <artifactId>jwat-common</artifactId>
            <version>${org.jwat.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jwat</groupId>
            <artifactId>jwat-gzip</artifactId>
            <version>${org.jwat.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jwat</groupId>
            <artifactId>jwat-warc</artifactId>
            <version>${org.jwat.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jwat</groupId>
            <artifactId>jwat-archive</artifactId>
            <version>${org.jwat.version}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.15.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.33.0</version>
                    <executions>
                        <execution>
                            <id>prepare-proxy-tests</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>build</goal>
                                <goal>volume-create</goal>
                                <goal>start</goal>
                            </goals>
                            <configuration>
                            </configuration>
                        </execution>
                        <execution>
                            <id>remove-proxy-tests</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>stop</goal>
                                <goal>volume-remove</goal>
                            </goals>
                            <configuration>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M4</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <removeVolumes>true</removeVolumes>
                            <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                            <verbose>false</verbose>
                            <startParallel>true</startParallel>

                            <volumes>
                                <volume>
                                    <name>harvester-workdir</name>
                                </volume>
                                <volume>
                                    <name>rethink-data</name>
                                </volume>
                                <volume>
                                    <name>contentwriter-workdir</name>
                                </volume>
                                <volume>
                                    <name>cache-data</name>
                                </volume>
                                <volume>
                                    <name>contentwriter-warcs</name>
                                    <driver>local</driver>
                                    <opts>
                                        <type>tmpfs</type>
                                        <device>tmpfs</device>
                                    </opts>
                                    <labels>
                                        <volatileData>true</volatileData>
                                    </labels>
                                </volume>
                            </volumes>

                            <images>
                                <image>
                                    <name>rethinkdb:${rethinkdb.version}</name>
                                    <alias>db</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>integration-test-net</name>
                                            <alias>db</alias>
                                        </network>
                                        <ports>
                                            <port>+db.host:db.port:28015</port>
                                        </ports>
                                        <volumes>
                                            <bind>
                                                <volume>rethink-data:/data</volume>
                                            </bind>
                                        </volumes>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <http>
                                                <url>http://localhost:8080</url>
                                            </http>
                                            <tcp>
                                                <ports>
                                                    <port>28015</port>
                                                    <port>29015</port>
                                                </ports>
                                            </tcp>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>
                                        norsknettarkiv/veidemann-db-initializer:${veidemann.rethinkdbadapter.version}
                                    </name>
                                    <alias>db-initializer</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>integration-test-net</name>
                                            <alias>db-initializer</alias>
                                        </network>
                                        <dependsOn>
                                            <container>db</container>
                                        </dependsOn>
                                        <env>
                                            <DB_HOST>db</DB_HOST>
                                            <DB_USER>admin</DB_USER>
                                        </env>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <exit>0</exit>
                                            <time>60000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>browserless/chrome:${browserless.chrome.version}</name>
                                    <alias>browser</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>integration-test-net</name>
                                            <alias>browser</alias>
                                        </network>
                                        <!-- 2GB -->
                                        <memory>2147483648</memory>
                                        <shmSize>2147483648</shmSize>
                                        <ports>
                                            <port>+browser.host:browser.port:3000</port>
                                        </ports>
                                        <env>
                                            <DEBUG>browserless/chrome</DEBUG>
                                            <CONNECTION_TIMEOUT>60000</CONNECTION_TIMEOUT>
                                        </env>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <time>30000</time>
                                            <tcp>
                                                <mode>mapped</mode>
                                                <ports>
                                                    <port>3000</port>
                                                </ports>
                                            </tcp>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>norsknettarkiv/veidemann-harvester:${veidemann.harvester.version}</name>
                                    <alias>harvester</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>integration-test-net</name>
                                            <alias>harvester</alias>
                                        </network>
                                        <ports>
                                            <port>+harvester.host:harvester.port:9090</port>
                                            <port>5005</port>
                                        </ports>
                                        <dependsOn>
                                            <container>db-initializer</container>
                                            <container>contentwriter</container>
                                            <container>frontier</container>
                                            <container>robots</container>
                                        </dependsOn>
                                        <volumes>
                                            <bind>
                                                <volume>harvester-workdir:/workdir</volume>
                                            </bind>
                                        </volumes>
                                        <env>
                                            <BROWSER_WS_ENDPOINT>ws://browser:3000/</BROWSER_WS_ENDPOINT>
                                            <DB_HOST>db</DB_HOST>
                                            <FRONTIER_HOST>frontier</FRONTIER_HOST>
                                            <CONTENT_WRITER_HOST>contentwriter</CONTENT_WRITER_HOST>
                                            <CONTENT_WRITER_PORT>8080</CONTENT_WRITER_PORT>
                                            <ROBOTS_EVALUATOR_PORT>50053</ROBOTS_EVALUATOR_PORT>
                                            <ROBOTS_EVALUATOR_HOST>robots</ROBOTS_EVALUATOR_HOST>
                                            <PROXY_HOST>recorderproxy</PROXY_HOST>
                                            <PROXY_PORT>9900</PROXY_PORT>
                                            <MAX_OPEN_SESSIONS>3</MAX_OPEN_SESSIONS>
                                        </env>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <log>Veidemann harvester .* started</log>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>norsknettarkiv/veidemann-recorderproxy:${veidemann.recorderproxy.version}
                                    </name>
                                    <alias>recorderproxy</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>integration-test-net</name>
                                            <alias>recorderproxy</alias>
                                        </network>
                                        <ports>
                                            <port>+harvester.proxy.host:harvester.proxy.port:8080</port>
                                        </ports>
                                        <dependsOn>
                                            <container>db-initializer</container>
                                            <container>dnsresolver</container>
                                            <container>harvester</container>
                                            <container>cache</container>
                                            <container>contentwriter</container>
                                        </dependsOn>
                                        <env>
                                            <CACHE_HOST>cache</CACHE_HOST>
                                            <CACHE_PORT>3128</CACHE_PORT>
                                            <PORT>9900</PORT>
                                            <PROXY_COUNT>3</PROXY_COUNT>
                                            <DNS_RESOLVER_HOST>dnsresolver</DNS_RESOLVER_HOST>
                                            <DNS_RESOLVER_PORT>8053</DNS_RESOLVER_PORT>
                                            <CONTENT_WRITER_HOST>contentwriter</CONTENT_WRITER_HOST>
                                            <CONTENT_WRITER_PORT>8080</CONTENT_WRITER_PORT>
                                            <BROWSER_CONTROLLER_HOST>harvester</BROWSER_CONTROLLER_HOST>
                                            <BROWSER_CONTROLLER_PORT>9999</BROWSER_CONTROLLER_PORT>
                                            <CA></CA>
                                            <CA_KEY></CA_KEY>
                                        </env>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <log>Veidemann recorder proxy started</log>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>norsknettarkiv/veidemann-cache:${veidemann.cache.version}</name>
                                    <alias>cache</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>integration-test-net</name>
                                            <alias>cache</alias>
                                        </network>
                                        <ports>
                                            <port>+cache.http.host:cache.http.port:3128</port>
                                        </ports>
                                        <capAdd>
                                            <add>NET_ADMIN</add>
                                        </capAdd>
                                        <!-- 2GB -->
                                        <memory>2147483648</memory>
                                        <shmSize>2147483648</shmSize>
                                        <volumes>
                                            <bind>
                                                <volume>cache-data:/var/cache/squid</volume>
                                            </bind>
                                        </volumes>
                                        <env>
                                            <DNS_SERVERS>dnsresolver</DNS_SERVERS>
                                        </env>
                                        <log>
                                            <enabled>false</enabled>
                                        </log>
                                        <dependsOn>
                                            <container>dnsresolver</container>
                                        </dependsOn>
                                        <wait>
                                            <tcp>
                                                <mode>mapped</mode>
                                                <ports>
                                                    <port>3128</port>
                                                </ports>
                                            </tcp>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>norsknettarkiv/veidemann-contentwriter:${veidemann.contentwriter.version}
                                    </name>
                                    <alias>contentwriter</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>integration-test-net</name>
                                            <alias>contentwriter</alias>
                                        </network>
                                        <ports>
                                            <port>+contentwriter.host:contentwriter.port:8080</port>
                                        </ports>
                                        <dependsOn>
                                            <container>db-initializer</container>
                                        </dependsOn>
                                        <volumes>
                                            <bind>
                                                <volume>contentwriter-warcs:/warcs</volume>
                                                <volume>contentwriter-workdir:/workdir</volume>
                                            </bind>
                                        </volumes>
                                        <env>
                                            <DB_HOST>db</DB_HOST>
                                            <UNSAFE>true</UNSAFE>
                                            <WARC_WRITER_POOL_SIZE>4</WARC_WRITER_POOL_SIZE>
                                        </env>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <log>Veidemann Content Writer .* started</log>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>norsknettarkiv/veidemann-contentexplorer:${veidemann.harvester.version}</name>
                                    <alias>contentexplorer</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>integration-test-net</name>
                                            <alias>contentexplorer</alias>
                                        </network>
                                        <ports>
                                            <port>+contentexplorer.host:contentexplorer.port:8081</port>
                                        </ports>
                                        <dependsOn>
                                            <container>db-initializer</container>
                                        </dependsOn>
                                        <volumes>
                                            <bind>
                                                <volume>contentwriter-warcs:/warcs</volume>
                                                <volume>contentwriter-workdir:/workdir</volume>
                                            </bind>
                                        </volumes>
                                        <env>
                                            <DB_HOST>db</DB_HOST>
                                            <UNSAFE>true</UNSAFE>
                                        </env>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <log>Veidemann Content Explorer .* started</log>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>norsknettarkiv/veidemann-frontier:${veidemann.frontier.version}</name>
                                    <alias>frontier</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>integration-test-net</name>
                                            <alias>frontier</alias>
                                        </network>
                                        <ports>
                                            <port>+frontier.host:frontier.port:7700</port>
                                        </ports>
                                        <dependsOn>
                                            <container>db-initializer</container>
                                            <container>robots</container>
                                            <container>dnsresolver</container>
                                        </dependsOn>
                                        <env>
                                            <DB_HOST>db</DB_HOST>
                                            <ROBOTS_EVALUATOR_PORT>50053</ROBOTS_EVALUATOR_PORT>
                                            <ROBOTS_EVALUATOR_HOST>robots</ROBOTS_EVALUATOR_HOST>
                                            <DNS_RESOLVER_HOST>dnsresolver</DNS_RESOLVER_HOST>
                                            <DNS_RESOLVER_PORT>8053</DNS_RESOLVER_PORT>
                                        </env>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <log>Veidemann Frontier .* started</log>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>norsknettarkiv/veidemann-controller:${veidemann.controller.version}</name>
                                    <alias>controller</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>integration-test-net</name>
                                            <alias>controller</alias>
                                        </network>
                                        <ports>
                                            <port>+controller.host:controller.port:50051</port>
                                        </ports>
                                        <dependsOn>
                                            <container>db-initializer</container>
                                            <container>frontier</container>
                                        </dependsOn>
                                        <env>
                                            <DB_HOST>db</DB_HOST>
                                            <FRONTIER_HOST>frontier</FRONTIER_HOST>
                                            <APIKEY_ROLE_MAPPING_FILE>/app/resources/apikeys/apiKeyRoleMapping.txt
                                            </APIKEY_ROLE_MAPPING_FILE>
                                        </env>
                                        <volumes>
                                            <bind>
                                                <volume>src/test/resources/apikeys:/app/resources/apikeys:ro,Z</volume>
                                            </bind>
                                        </volumes>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <log>Veidemann Controller .* started</log>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>norsknettarkiv/veidemann-dns-resolver:${veidemann.dns.resolver.version}</name>
                                    <alias>dnsresolver</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>integration-test-net</name>
                                            <alias>dnsresolver</alias>
                                        </network>
                                        <ports>
                                            <port>+dns.host:dns.port:53</port>
                                        </ports>
                                        <dependsOn>
                                            <container>db-initializer</container>
                                            <container>contentwriter</container>
                                            <container>testsites</container>
                                        </dependsOn>
                                        <env>
                                            <DB_HOST>db</DB_HOST>
                                            <DB_USER>admin</DB_USER>
                                            <DB_PASSWORD></DB_PASSWORD>
                                            <CONTENT_WRITER_HOST>contentwriter</CONTENT_WRITER_HOST>
                                            <CONTENT_WRITER_PORT>8080</CONTENT_WRITER_PORT>
                                            <DNS_SERVER>testsites</DNS_SERVER>
                                        </env>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <tcp>
                                                <mode>mapped</mode>
                                                <ports>
                                                    <port>53</port>
                                                </ports>
                                            </tcp>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>
                                        norsknettarkiv/veidemann-robotsevaluator-service:${veidemann.robotsevaluator.version}
                                    </name>
                                    <alias>robots</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>integration-test-net</name>
                                            <alias>robots</alias>
                                        </network>
                                        <ports>
                                            <port>+robots.host:robots.port:50053</port>
                                        </ports>
                                        <env>
                                            <PROXY_HOST>recorderproxy</PROXY_HOST>
                                            <PROXY_PORT>9900</PROXY_PORT>
                                        </env>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <tcp>
                                                <mode>mapped</mode>
                                                <ports>
                                                    <port>50053</port>
                                                </ports>
                                            </tcp>
                                        </wait>
                                    </run>
                                </image>

                                <image>
                                    <name>norsknettarkiv/testsites</name>
                                    <alias>testsites</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>integration-test-net</name>
                                            <alias>testsites</alias>
                                        </network>
                                        <ports>
                                            <port>+test.http.host:test.http.port:80</port>
                                            <port>+test.dns.host:test.dns.port:53</port>
                                        </ports>
                                        <log>
                                            <enabled>false</enabled>
                                        </log>
                                        <wait>
                                            <tcp>
                                                <mode>mapped</mode>
                                                <ports>
                                                    <port>80</port>
                                                    <port>53</port>
                                                </ports>
                                            </tcp>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <db.host>${db.host}</db.host>
                                <db.port>${db.port}</db.port>
                                <controller.host>${controller.host}</controller.host>
                                <controller.port>${controller.port}</controller.port>
                                <contentwriter.host>${contentwriter.host}</contentwriter.host>
                                <contentwriter.port>${contentwriter.port}</contentwriter.port>
                                <contentexplorer.host>${contentexplorer.host}</contentexplorer.host>
                                <contentexplorer.port>${contentexplorer.port}</contentexplorer.port>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
